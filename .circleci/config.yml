version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.11.4
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            # golangci-lint
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.12.4
            sudo cp ./bin/golangci-lint $GOPATH/bin
            # protoc
            curl -OL https://github.com/google/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip
            unzip -o protoc-3.6.1-linux-x86_64.zip bin/protoc
            sudo cp bin/protoc /bin/protoc
      - run:
          name: Run tests
          command: make test
      - run:
          name: Lint
          command: make lint
      - run:
          name: Build
          command: make build
  push:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Setup Google Cloud SDK
          command: |
            echo ${GCLOUD_AUTH} > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GCP_PROJECT}
            gcloud auth configure-docker
      - run:
          name: Build docker image
          command: docker build --rm=false -t us.gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:${CIRCLE_SHA1} .
      - run:
          name: Push docker image
          command: docker push us.gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:${CIRCLE_SHA1}
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            echo ${GCLOUD_AUTH} > ${HOME}/gcp-key.json
            gcloud --quiet auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GCP_PROJECT}
            gcloud --quiet auth configure-docker
            gcloud --quiet container clusters get-credentials taeho-cluster --zone us-west1-a --project ${GCP_PROJECT}
      - run:
          name: Install dependencies
          command: apt-get -y install gettext-base
      - run:
          name: Patch environment variables on k8s.yaml
          command: envsubst < k8s.yaml > patched_k8s.yaml
      - run:
          name: Apply to k8s
          command: kubectl apply -n taeho -f patched_k8s.yaml
workflows:
  version: 2
  test-push-deploy:
    jobs:
      - test
      - push:
          requires:
            - test
      - approve-to-deploy:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - push
      - deploy:
          requires:
            - approve-to-deploy
