syntax = "proto3";
option go_package = "github.com/taeho-io/user";
package user;

import "github.com/lyft/protoc-gen-validate/validate/validate.proto";

service User {
    rpc Register (RegisterRequest) returns (RegisterResponse) {
    }
    rpc LogIn (LogInRequest) returns (LogInResponse) {
    }
    rpc SignInWithGoogle (SignInWithGoogleRequest) returns (SignInWithGoogleResponse) {
    }
    rpc Get (GetRequest) returns (GetResponse) {
    }
}

enum UserType {
    EMAIL = 0;
    GOOGLE = 1;
}

message RegisterRequest {
    UserType user_type = 1 [(validate.rules).enum.const = 0];
    string email = 2 [(validate.rules).string.email = true];
    string password = 3 [(validate.rules).string.min_len = 6];
    string name = 4 [(validate.rules).string.pattern = "^[^\\s*].*[^\\s*]$"];
}

message RegisterResponse {
    string access_token = 1;
    string refresh_token = 2;
    int64 expires_in = 3;
    int64 user_id = 4;
}

message LogInRequest {
    UserType user_type = 1 [(validate.rules).enum.const = 0];
    string email = 2 [(validate.rules).string.email = true];
    string password = 3 [(validate.rules).string.min_len = 6];
}

message LogInResponse {
    string access_token = 1;
    string refresh_token = 2;
    int64 expires_in = 3;
    int64 user_id = 4;
}

message SignInWithGoogleRequest {
    string google_id_token = 1 [(validate.rules).string.min_len = 10];
    string name = 2;
}

message SignInWithGoogleResponse {
    string access_token = 1;
    string refresh_token = 2;
    int64 expires_in = 3;
    int64 user_id = 4;
}

message GetRequest {
    int64 user_id = 1 [(validate.rules).int64.gt = 999];
}

message GetResponse {
    int64 user_id = 1;
    UserType user_type = 2;
    string email = 3;
    string name = 4;
}
